# keyboards.py
from telebot.types import (
    ReplyKeyboardMarkup, KeyboardButton, 
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardRemove
)
import geography_db
import db  # ‚úÖ A√ëADIR ESTA IMPORTACI√ìN CR√çTICA

# ... (el resto del c√≥digo de keyboards.py se mantiene igual, solo aseg√∫rate de que existe la importaci√≥n de 'db' arriba)

# En la funci√≥n get_work_zones_menu, cambiar:
def get_work_zones_menu(user_id):
    """Men√∫ principal de la gesti√≥n de filtros del transportista."""
    
    # Obtener el ID interno del usuario - ‚úÖ CORREGIDO: usar db en lugar de geography_db
    user_db_id = db.get_user_internal_id(user_id)
    if not user_db_id:
        return None
        
    # Obtener la informaci√≥n del usuario para el pa√≠s de registro
    user_data = db.get_user_by_telegram_id(user_id)
    pais_id = user_data['pais_id'] if user_data else None

    markup = InlineKeyboardMarkup(row_width=1)
    
    # 1. Configurar capacidad de carga
    markup.add(InlineKeyboardButton("‚öñÔ∏è Configurar Carga M√°xima (Toneladas)", callback_data="filter_set_capacity"))
    
    # 2. Seleccionar Pa√≠ses (para filtrar las solicitudes)
    countries = geography_db.get_available_countries_for_registration()
    
    # Se a√±ade solo el bot√≥n para seleccionar Pa√≠ses/Provincias/Zonas
    if countries:
        markup.add(InlineKeyboardButton("üó∫Ô∏è Seleccionar Pa√≠ses de Trabajo", callback_data="filter_select_country"))
    else:
        markup.add(InlineKeyboardButton("‚ùå No hay pa√≠ses para seleccionar zonas", callback_data="filter_no_zones"))
    
    markup.add(InlineKeyboardButton("‚Ü©Ô∏è Volver al Men√∫ Principal", callback_data="menu_back_main"))
    return markup